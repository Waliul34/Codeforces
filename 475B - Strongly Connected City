#include <bits/stdc++.h>
using namespace std;

string hor, ver;
bool vis[20][20];
void sol(int n, int m)
{
    int i(0), k(0);
    for(i = 0; i < n; i++)
    {
        for(k = 0; k < m; k++)
        {
            memset(vis, false, sizeof(vis));
            queue<pair<int, int>>path;
            path.push({i, k});
            vis[i][k] = true;
            while(!path.empty())
            {
                int x, y, row, col;
                pair<int, int>top = path.front();
                path.pop();
                x = row = top.first;
                y = col = top.second;
                hor[row] == '>' ? y++ : y--;
                if(y >= 0 && y < m && (!vis[row][y]))
                {
                    path.push({row, y});
                    vis[row][y] = true;
                }
                ver[col] == 'v' ? x++ : x--;
                if(x >= 0 && x < n && (!vis[x][col]))
                {
                    path.push({x, col});
                    vis[x][col] = true;
                }
            }
            for(int ii = 0; ii < n; ii++)
                for(int jj = 0; jj < m; jj++)
                {
                    if(!vis[ii][jj])
                    {
                        cout<<"NO";
                        return;
                    }
                }
        }
    }
    cout<<"YES";
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(),cout.tie();

    int n, m;
    cin>>n>>m;
    cin>>hor>>ver;
    sol(n, m);
    return 0;
}
