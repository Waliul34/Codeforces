#include <bits/stdc++.h>
using namespace std;

int n;
long long int dp[100005][3];
int arr1[100005], arr2[100005];

long long int sol(int pos, int prev)
{
    if(pos > n)
        return 0;
    if(dp[pos][prev] != -1)
        return dp[pos][prev];
    long long int ret0 = 0, ret1 = 0, ret2 = 0;
    if(prev == 0)
    {
        ret1 = arr1[pos] + sol(pos+1, 1);
        ret2 = arr2[pos] + sol(pos+1, 2);
        ret0 = sol(pos+1, 0);
    }
    else if(prev == 1)
    {
        ret2 = arr2[pos] + sol(pos+1, 2);
        ret0 = sol(pos+1, 0);
    }
    else
    {
        ret1 = arr1[pos] + sol(pos+1, 1);
        ret0 = sol(pos+1, 0);
    }
    return dp[pos][prev] = max(ret0, max(ret1, ret2));
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(),cout.tie();

    int i, j, k;
    memset(dp, -1, sizeof(dp));
    cin>>n;
    for(i = 1; i <= n; i++)
        cin>>arr1[i];
    for(i = 1; i <= n; i++)
        cin>>arr2[i];
    long long int ans = sol(0, 0);
    cout<<ans;
    return 0;
}
